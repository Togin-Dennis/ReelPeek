{"version":3,"file":"static/js/961.085f190c.chunk.js","mappings":"gMAsEA,QA/DA,WACA,MAAMA,GAAWC,EAAAA,EAAAA,OACXC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAC/BC,EAAUC,IAAcF,EAAAA,EAAAA,WAAS,GA0BpC,OAzBFG,EAAAA,EAAAA,YAEF,KAEIC,EAAAA,EAAMC,IAAIC,EAAAA,IAAaC,MAClBC,IAEC,MAAMC,EAAcC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAaK,KAAKC,QAAQC,QAClEC,EAAWR,EAAaK,KAAKC,QAAQL,GAGxCQ,EAAM,IAAIC,MAChBD,EAAIE,IAAMC,EAAAA,GAAWJ,EAASK,cAC9BJ,EAAIK,OAAS,KACXvB,EAAYiB,GACZd,GAAa,OAGjBqB,OAAM,KAAK3B,EAAS,aACxB,KAQM4B,EAAAA,EAAAA,MAAA,OAAKC,UAAWxB,EAAY,wBAA0B,oCAAqCyB,MAAO,CAAEC,gBAAgB,OAADC,OAASR,EAAAA,IAAmB,OAARtB,QAAQ,IAARA,OAAQ,EAARA,EAAUuB,eAAa,MAAMQ,SAAA,EAY9JC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,UACjBD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaI,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,QAAOI,SAAE/B,EAASiC,SAChCD,EAAAA,EAAAA,KAAA,MAAIL,UAAU,UAASI,SAAC,eACxBC,EAAAA,EAAAA,KAAA,KAAGL,UAAU,cAAaI,SAAE/B,EAASkC,YACrCR,EAAAA,EAAAA,MAAA,UAAQC,UAAU,eAClBQ,QAAUA,KACjBrC,EAAS,YAAa,CAAEsC,MAAM,CAACpC,eAE/B+B,SAAA,EACSC,EAAAA,EAAAA,KAAA,OAAKL,UAAU,eAAeN,IAAI,wDAAwDgB,IAAI,KAAK,oBAQrH,C","sources":["HomeComponents/Poster.js"],"sourcesContent":["import React, { useEffect,useState  } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios'\r\nimport { TrendingUrl,imageurl } from '../links'\r\nimport SmallPosters from './smallposter'\r\nimport { orginal,Baseurl,netflixorginal } from '../links'\r\nimport DetailedPage from '../DetailedPage/DetailedPage'\r\nfunction Poster() {\r\nconst navigate = useNavigate()\r\nconst[Trending,setTrending] =useState([])\r\nconst [isloading,setIsLoading]=useState(true)\r\n  useEffect(\r\n\r\n()=>\r\n{\r\n    axios.get(TrendingUrl).then(\r\n        (responcedata)=>\r\n        {\r\n          const randomIndex = Math.floor(Math.random() * responcedata.data.results.length);\r\n           const selected = responcedata.data.results[randomIndex];\r\n\r\n           // Preload image\r\n        const img = new Image();\r\n        img.src = imageurl + selected.backdrop_path;\r\n        img.onload = () => {\r\n          setTrending(selected);\r\n          setIsLoading(false);\r\n        };\r\n        }\r\n    ).catch(()=>{navigate('/404')})\r\n},[]\r\n\r\n  )\r\n  \r\n\r\n\r\n    return (\r\n\r\n        <div className={isloading ? 'Posterdiv loadingblur' : 'Posterdiv loadingblur imageloaded'} style={{ backgroundImage: `url(${imageurl + Trending?.backdrop_path})` }}>\r\n          \r\n              {/* isloading ? \r\n              <div className='loadingdiv'>\r\n                 <div className='Loader'>\r\n\r\n                  \r\n                 </div>\r\n              </div>\r\n              \r\n            : */}\r\n\r\n              <div className='Fade'></div>\r\n            <div className=\"PosterTexts\">\r\n                <h1 className='title'>{Trending.title}</h1>\r\n                <h4 className=\"hashtag\">#Trending</h4>\r\n                <p className=\"Description\">{Trending.overview}</p>\r\n                <button className='PosterButton'\r\n                onClick={ () => {\r\n         navigate('/detailed', { state:{Trending}});\r\n         }\r\n        }>  \r\n                  <img className='moreinfoicon' src=\"https://static.thenounproject.com/png/1815789-200.png\" alt=\"\" />\r\n                  More Info</button>\r\n                  \r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Poster\r\n"],"names":["navigate","useNavigate","Trending","setTrending","useState","isloading","setIsLoading","useEffect","axios","get","TrendingUrl","then","responcedata","randomIndex","Math","floor","random","data","results","length","selected","img","Image","src","imageurl","backdrop_path","onload","catch","_jsxs","className","style","backgroundImage","concat","children","_jsx","title","overview","onClick","state","alt"],"sourceRoot":""}